{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Waddy\\\\Documents\\\\Projects\\\\React\\\\WeatherApp\\\\client\\\\src\\\\components\\\\Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Forecast.css';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Forecast(_ref) {\n  _s();\n\n  let {\n    lat,\n    lon\n  } = _ref;\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(json => {\n        setData(json);\n        setIsLoaded(true);\n      });\n    };\n\n    fetchData();\n  }, [lat, lon]);\n\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trapezoid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-name\",\n          children: [data.city.name, \",\", data.city.state ? \" \" + data.city.state + \",\" : \"\", \" \", data.city.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Forecast, \"gXzva62e2/aOqEkJraWpY8QMkIc=\");\n\n_c = Forecast;\nexport default Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["C:/Users/Waddy/Documents/Projects/React/WeatherApp/client/src/components/Forecast.js"],"names":["React","useEffect","useState","Card","Forecast","lat","lon","isLoaded","setIsLoaded","data","setData","fetchData","fetch","process","env","REACT_APP_API_KEY","then","res","json","city","name","state","country"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,OAA8B;AAAA;;AAAA,MAAZ;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,GAAY;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,SAAS,GAAG,YAAY;AAC1B,YAAMC,KAAK,CACN,wDAAuDP,GAAI,QAAOC,GAAI,UAASO,OAAO,CAACC,GAAR,CAAYC,iBAAkB,EADvG,CAAL,CAEGC,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFjB,EAGGF,IAHH,CAGSE,IAAD,IAAU;AACZR,QAAAA,OAAO,CAACQ,IAAD,CAAP;AACAV,QAAAA,WAAW,CAAC,IAAD,CAAX;AACC,OANP,CAAN;AAQH,KATD;;AAUAG,IAAAA,SAAS;AACZ,GAZQ,EAYN,CAACN,GAAD,EAAMC,GAAN,CAZM,CAAT;;AAgBA,MAAI,CAACC,QAAL,EAAe;AACX,wBACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAOK;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,qBACKE,IAAI,CAACU,IAAL,CAAUC,IADf,OACsBX,IAAI,CAACU,IAAL,CAAUE,KAAV,GAAkB,MAAMZ,IAAI,CAACU,IAAL,CAAUE,KAAhB,GAAwB,GAA1C,GAAgD,EADtE,OAC2EZ,IAAI,CAACU,IAAL,CAAUG,OADrF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEb;AAAZ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;AACJ;;GAzCQL,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport './Forecast.css';\r\nimport Card from './Card';\r\n\r\nfunction Forecast({lat, lon}) {    \r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(\r\n                `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_API_KEY}`)\r\n                    .then((res) => res.json())\r\n                    .then((json) => {\r\n                        setData(json);\r\n                        setIsLoaded(true);\r\n                        }\r\n            );\r\n        };\r\n        fetchData();\r\n    }, [lat, lon]);\r\n\r\n    \r\n\r\n    if (!isLoaded) {\r\n        return (\r\n            <div>\r\n                <h1>Loading data...</h1>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className='forecast'>\r\n                <div className=\"trapezoid\">\r\n                    <div className=\"location-name\">\r\n                        {data.city.name},{data.city.state ? \" \" + data.city.state + \",\" : \"\"} {data.city.country}\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n                <Card data={data} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Forecast;\r\n"]},"metadata":{},"sourceType":"module"}