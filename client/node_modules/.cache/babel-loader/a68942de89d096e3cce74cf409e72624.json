{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Waddy\\\\Documents\\\\Projects\\\\React\\\\WeatherApp\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport Weather from './components/Weather';\nimport Forecast from './components/Forecast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [lat, setLat] = useState();\n  const [lon, setLon] = useState();\n  const [data, setData] = useState();\n  const [option, setOption] = useState('today');\n  useEffect(() => {\n    fetch('/express_backend').then(res => setData(res.express)).catch(err => console.log(err));\n    console.log(data);\n  }, []);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLon(position.coords.longitude);\n    });\n  }, [lat, lon]);\n\n  if (!lat || !lon) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: !data ? \"Loading...\" : data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"dQ2h1TqShiy3wHlR2+9qXsC12NY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Waddy/Documents/Projects/React/WeatherApp/client/src/App.js"],"names":["useEffect","useState","Weather","Forecast","App","lat","setLat","lon","setLon","data","setData","option","setOption","fetch","then","res","express","catch","err","console","log","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,EAA9B;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,EAA9B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,OAAD,CAApC;AAKAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAAC,kBAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASL,OAAO,CAACK,GAAG,CAACC,OAAL,CADxB,EAEGC,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACD,GALQ,EAKN,EALM,CAAT;AAQAT,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AAC1DlB,MAAAA,MAAM,CAACkB,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAN;AACAlB,MAAAA,MAAM,CAACgB,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAN;AACD,KAHD;AAID,GALQ,EAKN,CAACtB,GAAD,EAAME,GAAN,CALM,CAAT;;AAOA,MAAI,CAACF,GAAD,IAAQ,CAACE,GAAb,EAAkB;AAChB,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARD,MASK;AACH,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACE;AAAA,oBAAI,CAACE,IAAD,GAAQ,YAAR,GAAuBA;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AACF;;GA5CQL,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from \"react\";\nimport Weather from './components/Weather';\nimport Forecast from './components/Forecast';\n\nfunction App() {\n  const [lat, setLat] = useState();\n  const [lon, setLon] = useState();\n  const [data, setData] = useState();\n  const [option, setOption] = useState('today');\n\n  \n  \n\n  useEffect(() => {\n    fetch('/express_backend')\n      .then((res) => setData(res.express))\n      .catch((err) => console.log(err));\n    console.log(data);\n  }, []) \n\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      setLat(position.coords.latitude);\n      setLon(position.coords.longitude);\n    });\n  }, [lat, lon])\n\n  if (!lat || !lon) {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          Loading data...\n        </div>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>{!data ? \"Loading...\" : data}</p>\n          {/* {option === '5day' && <Forecast lat={lat} lon={lon} />}\n          {option === 'today' && <Weather lat={lat} lon={lon} setLat={setLat} setLon={setLon} />} */}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}