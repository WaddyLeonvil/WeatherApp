{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Waddy\\\\Documents\\\\Projects\\\\React\\\\WeatherApp\\\\client\\\\src\\\\components\\\\Searchbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Searchbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Searchbar(_ref) {\n  _s();\n\n  let {\n    setLat,\n    setLon,\n    setName\n  } = _ref;\n  const [data, setData] = useState();\n  const [location, setLocation] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    setValue(target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLocation(value);\n    setValue(\"\");\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(`https://api.opencagedata.com/geocode/v1/json?key=${process.env.REACT_APP_GEO_API_KEY}&q=${location}`).then(res => res.json()).then(json => {\n        setData(json);\n      });\n    };\n\n    if (location !== \"\") {\n      fetchData();\n    }\n  }, [location]);\n  useEffect(() => {\n    const setCoords = () => {\n      try {\n        setLat(data.results[0].geometry.lat);\n        setLon(data.results[0].geometry.lng);\n        setName(data.results[0].formatted);\n      } catch (e) {\n        return;\n      }\n    };\n\n    setCoords();\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Location Here\",\n          value: value,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Searchbar, \"4uvU8flju7iUuWnjG2dLCj91fbI=\");\n\n_c = Searchbar;\nexport default Searchbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Searchbar\");","map":{"version":3,"sources":["C:/Users/Waddy/Documents/Projects/React/WeatherApp/client/src/components/Searchbar.js"],"names":["React","useEffect","useState","Searchbar","setLat","setLon","setName","data","setData","location","setLocation","value","setValue","handleChange","target","handleSubmit","e","preventDefault","fetchData","fetch","process","env","REACT_APP_GEO_API_KEY","then","res","json","setCoords","results","geometry","lat","lng","formatted"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,iBAAP;;;AAEA,SAASC,SAAT,OAA8C;AAAA;;AAAA,MAA3B;AAACC,IAAAA,MAAD;AAASC,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,GAA2B;AAC1C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMW,YAAY,GAAG,SAAc;AAAA,QAAb;AAACC,MAAAA;AAAD,KAAa;AAC/BF,IAAAA,QAAQ,CAACE,MAAM,CAACH,KAAR,CAAR;AACH,GAFD;;AAIA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,WAAW,CAACC,KAAD,CAAX;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAJD;;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,SAAS,GAAG,YAAY;AAC1B,YAAMC,KAAK,CACN,oDAAmDC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,MAAKb,QAAS,EAD7F,CAAL,CAEGc,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFjB,EAGGF,IAHH,CAGSE,IAAD,IAAU;AACZjB,QAAAA,OAAO,CAACiB,IAAD,CAAP;AACC,OALP,CAAN;AAOH,KARD;;AASA,QAAIhB,QAAQ,KAAK,EAAjB,EAAqB;AACjBS,MAAAA,SAAS;AACZ;AACJ,GAbQ,EAaN,CAACT,QAAD,CAbM,CAAT;AAeAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMyB,SAAS,GAAG,MAAM;AACpB,UAAI;AACAtB,QAAAA,MAAM,CAACG,IAAI,CAACoB,OAAL,CAAa,CAAb,EAAgBC,QAAhB,CAAyBC,GAA1B,CAAN;AACAxB,QAAAA,MAAM,CAACE,IAAI,CAACoB,OAAL,CAAa,CAAb,EAAgBC,QAAhB,CAAyBE,GAA1B,CAAN;AACAxB,QAAAA,OAAO,CAACC,IAAI,CAACoB,OAAL,CAAa,CAAb,EAAgBI,SAAjB,CAAP;AACH,OAJD,CAKA,OAAOf,CAAP,EAAU;AACN;AACH;AACJ,KATD;;AAUAU,IAAAA,SAAS;AACZ,GAZQ,EAYN,CAACnB,IAAD,CAZM,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAM,QAAA,QAAQ,EAAEQ,YAAhB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,qBAA/B;AAAqD,UAAA,KAAK,EAAEJ,KAA5D;AAAmE,UAAA,QAAQ,EAAEE;AAA7E;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAzDQV,S;;KAAAA,S;AA4DT,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport './Searchbar.css';\r\n\r\nfunction Searchbar({setLat, setLon, setName}) {\r\n    const [data, setData] = useState();\r\n    const [location, setLocation] = useState(\"\");\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleChange = ({target}) => {\r\n        setValue(target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLocation(value);\r\n        setValue(\"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(\r\n                `https://api.opencagedata.com/geocode/v1/json?key=${process.env.REACT_APP_GEO_API_KEY}&q=${location}`)\r\n                    .then((res) => res.json())\r\n                    .then((json) => {\r\n                        setData(json);\r\n                        }\r\n            );\r\n        };\r\n        if (location !== \"\") {\r\n            fetchData();\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        const setCoords = () => {\r\n            try {\r\n                setLat(data.results[0].geometry.lat);\r\n                setLon(data.results[0].geometry.lng);\r\n                setName(data.results[0].formatted);\r\n            }\r\n            catch (e) {\r\n                return;\r\n            }\r\n        };\r\n        setCoords();\r\n    }, [data]);\r\n\r\n    return (\r\n        <div className='search'>\r\n            <div className=\"search-inputs\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type='text' placeholder='Enter Location Here' value={value} onChange={handleChange}/>\r\n                    <input type='submit' />\r\n                </form>\r\n                <div className=\"search-icon\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Searchbar"]},"metadata":{},"sourceType":"module"}